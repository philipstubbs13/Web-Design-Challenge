{"version":3,"sources":["Images/time_of_day_us.png","Images/percentage_videos_no_tags.png","Images/popular_tags_us_2018.png","Images/top_trending_videos_by_category_us.png","components/NavBar/index.js","pages/Landing/index.js","pages/Data/index.js","pages/Comparison/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","href","id","to","type","Landing","class","src","timeBarChart","tagsPieChart","tagsBarChart","categoryPieChart","Data","Comparison","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+HAAAA,EAAOC,QAAU,IAA0B,4C,qBCA3CD,EAAOC,QAAU,IAA0B,uD,gBCA3CD,EAAOC,QAAU,IAA0B,kD,gBCA3CD,EAAOC,QAAU,IAA0B,gE,sNCK5B,SAASC,IACtB,OACE,yBAAKC,UAAU,iDACb,uBAAGA,UAAU,iCAAiCC,KAAK,KAAnD,6BAGA,yBAAKD,UAAU,wCAAwCE,GAAG,sBACxD,yBAAKF,UAAU,sBACb,uBAAGA,UAAU,uCAAuCC,KAAK,KAAzD,SACE,kBAAC,IAAD,CAAME,GAAG,eACP,4BAAQH,UAAU,oDAAoDI,KAAK,UAA3E,eAIF,kBAAC,IAAD,CAAMD,GAAG,SACP,4BAAQH,UAAU,oDAAoDI,KAAK,UAA3E,Y,8ECZC,SAASC,IACtB,OACE,yBAAKL,UAAU,aACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,uCACA,6BACA,yBAAKM,MAAM,0BAA0BC,IAAKC,MAC1C,iXAGA,oaAMN,yBAAKR,UAAU,uBACb,yBAAKA,UAAU,aACb,8CACA,6BACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKO,IAAKE,IAAcH,MAAM,yBAEhC,yBAAKN,UAAU,YACb,yBAAKO,IAAKC,IAAcF,MAAM,0BAGlC,yBAAKN,UAAU,OACb,yBAAKA,UAAU,YACb,yBAAKO,IAAKG,IAAcJ,MAAM,yBAEhC,yBAAKN,UAAU,YACb,yBAAKO,IAAKI,IAAkBL,MAAM,8BC1CnC,SAASM,IACtB,OACE,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,oCACA,6BACA,uHCTC,SAASa,IACtB,OACE,yBAAKb,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,aACb,0CACA,6BACA,+E,WCgBCc,MAff,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,QAAQC,UAAWL,IACrC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,cAAcC,UAAWJ,QCRlCK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.328ad0c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/time_of_day_us.8aad6d98.png\";","module.exports = __webpack_public_path__ + \"static/media/percentage_videos_no_tags.3ab3f65d.png\";","module.exports = __webpack_public_path__ + \"static/media/popular_tags_us_2018.c2d4329f.png\";","module.exports = __webpack_public_path__ + \"static/media/top_trending_videos_by_category_us.5d4b4c20.png\";","// @ts-nocheck\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-white\">\r\n      <a className=\"navbar-brand ml-5 navbar-title\" href=\"#\">\r\n        YouTube Trending Analysis\r\n      </a>\r\n      <div className=\"collapse navbar-collapse ml-auto ml-4\" id=\"navbarNavAltMarkup\">\r\n        <div className=\"navbar-nav ml-auto\">\r\n          <a className=\"nav-item nav-link ml-5 mr-5 nav-item\" href=\"#\" >Plots</a>\r\n            <Link to=\"/comparison\">\r\n              <button className=\"nav-item nav-link ml-5 mr-5 nav-item btn btn-link\" type=\"button\" >\r\n                Comparison\r\n              </button>\r\n            </Link>\r\n            <Link to=\"/data\">\r\n              <button className=\"nav-item nav-link ml-5 mr-5 nav-item btn btn-link\" type=\"button\" >\r\n                Data\r\n              </button>\r\n            </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","// @ts-nocheck\r\nimport React from 'react'\r\nimport './Landing.css';\r\nimport timeBarChart from '../../Images/time_of_day_us.png';\r\nimport tagsPieChart from '../../Images/percentage_videos_no_tags.png';\r\nimport tagsBarChart from '../../Images/popular_tags_us_2018.png';\r\nimport categoryPieChart from '../../Images/top_trending_videos_by_category_us.png';\r\n\r\nexport default function Landing() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"landing-grid mt-5\">\r\n        <div className=\"summary\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h3>Summary</h3>\r\n              <hr/>\r\n              <img class=\"text-wrap landing-image\" src={timeBarChart} />\r\n              <p>\r\n                YouTube is one of the largest search engines and one of the largest social media platforms. It is used by people all over the US and around the world. People use YouTube for a variety of reasons, such as watching music videos, learning how to do something new, watching sports highlights, or just watching random videos for entertainment.\r\n              </p>\r\n              <p>\r\n                Because of the popularity of YouTube, we decided to dig a little deeper into some of the characteristics that videos (in particular, trending videos) share. After gathering the information, we used that data to uncover some observations into what makes up a trending video and some insights for how a YouTube creator can improve their viewer engagement (likes, comments, dislikes, etc).\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card visualizations\">\r\n          <div className=\"card-body\">\r\n            <h3>Visualizations</h3>\r\n            <hr/>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <img src={tagsPieChart} class=\"visualization-image\" />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <img src={timeBarChart} class=\"visualization-image\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <img src={tagsBarChart} class=\"visualization-image\" />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <img src={categoryPieChart} class=\"visualization-image\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Data() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h3>Data</h3>\r\n              <hr />\r\n              <p>\r\n                The following table includes all of the data used for plotting during this project.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Comparison() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h3>Comparison</h3>\r\n              <hr />\r\n              <p>\r\n                Click any plot to get an in-depth analysis.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Landing from './pages/Landing';\nimport Data from './pages/Data';\nimport Comparison from './pages/Comparison';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n           <Route exact path=\"/\" component={Landing} />\n           <Route exact path=\"/data\" component={Data} />\n           <Route exact path=\"/comparison\" component={Comparison} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}